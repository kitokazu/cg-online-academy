'use client'


/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 mouse.gltf --types -t 
Author: SugarSatea (https://sketchfab.com/SugarSatea)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/simple-pc-mouse-4a8fcd93c882402cab7d2d6458855ac5
Title: Simple PC Mouse
*/


import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'
import { Mesh } from 'three';

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
  }
  materials: {
    ['Mouse.001']: THREE.MeshPhysicalMaterial
  }
  //animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Mouse(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF("/Mouse/mouse.gltf") as GLTFResult
  const ref = useRef<Mesh>(null!);
  useFrame(() => {
      ref.current.rotation.y += 0.01
  })

  return (
    <group {...props} dispose={null}>
      <mesh ref = {ref} geometry={nodes.Object_4.geometry} material={materials['Mouse.001']} scale={3} rotation= {[0,0,0]}/>
    </group>
  )
}

useGLTF.preload("/Mouse/mouse.gltf")
