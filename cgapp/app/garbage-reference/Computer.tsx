'use client'
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 computer.gltf --types t 
Author: Brandon Westlake (https://sketchfab.com/dr.badass2142)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/retro-computer-setup-free-82eaf2047e0447a1bfea22482f1d1404
Title: Retro Computer Setup (FREE)
*/

import * as THREE from 'three'
import React, { useRef, useLayoutEffect, useEffect } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useThree, useFrame  } from '@react-three/fiber'
import gsap from 'gsap';


type GLTFResult = GLTF & {
  nodes: {
    retro_computer_setup_retro_computer_setup_Mat_0: THREE.Mesh
  }
  materials: {
    retro_computer_setup_Mat: THREE.MeshStandardMaterial
  }
  //animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Computer(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Computer/computer.gltf') as GLTFResult

  const { viewport } = useThree();
  let positionX = -(viewport.width / 2); 

  const computerRef = useRef<any>(null!);
  const scroll = useScroll();

  // using type any for right now to make it easier
  const tl = useRef<any>();
  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
  })

  // why useLayoutEffect and not useEffect
  useLayoutEffect(()=> {
    tl.current = gsap.timeline();

    tl.current
    .to(computerRef.current.position, {duration: 0.5, x: -positionX/1.7}, 0.02)
    .to(computerRef.current.rotation, {duration: 0.5, y:-1.7}, 0.2)
    .to(computerRef.current.position, {duration: 1, y: -4}, 0.3)

  },[])


  return (
    <group ref = {computerRef} {...props} scale = {0.020} dispose={null} position= {[0,0,0]} > 
    
      <mesh geometry={nodes.retro_computer_setup_retro_computer_setup_Mat_0.geometry} material={materials.retro_computer_setup_Mat} rotation={[(-Math.PI / 2), 0, -0.2]}  >
      <meshPhysicalMaterial 
      color="#aaa"  
      roughness={0.2}
      metalness={1}
      reflectivity={0.5}
      iridescence={0.3}
      iridescenceIOR={1}
      iridescenceThicknessRange={[100,1000]}           
    />
        </mesh>
      
    </group>
  )
}

useGLTF.preload('/Computer/computer.gltf')
